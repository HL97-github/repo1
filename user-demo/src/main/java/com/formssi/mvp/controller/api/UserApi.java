/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.5).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.formssi.mvp.controller.api;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.formssi.mvp.pojo.ExceptionResponse;
import com.formssi.mvp.pojo.SuccessResponse;
import com.formssi.mvp.pojo.User;
import com.formssi.mvp.pojo.UsersResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Api(value = "User", description = "the User API")
public interface UserApi {

    @ApiOperation(value = "删除用户", nickname = "deleteUser", notes = "删除某个用户的信息，被删除的用户将无法登陆", response = SuccessResponse.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "通过返回值来标示执行结果　返回true表示执行成功", response = SuccessResponse.class),
        @ApiResponse(code = 200, message = "操作异常,执行失败.返回信息描述错误详情", response = ExceptionResponse.class) })
    @RequestMapping(value = "/user/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
     ResponseEntity<SuccessResponse> deleteUser(@ApiParam(value = "用户的唯一标示符",required=true) @PathVariable("id") Integer id) ;


    @ApiOperation(value = "根据用户id查询用戶信息", nickname = "getUser", notes = "查询用戶信息", response = User.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "用户的信息", response = User.class),
        @ApiResponse(code = 200, message = "操作异常,执行失败.返回信息描述错误详情", response = ExceptionResponse.class) })
    @RequestMapping(value = "/query",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
     ResponseEntity<User> getUser(@NotNull @ApiParam(value = "根据id查询用戶信息，是唯一标识", required = true) @Valid @RequestParam(value = "id", required = true) Integer id);



    @ApiOperation(value = "查询用户列表", nickname = "getUsers", notes = "查询出所有用户的所有信息", response = UsersResponse.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "所有用户信息或者用户的集合信息", response = UsersResponse.class),
        @ApiResponse(code = 200, message = "操作异常,执行失败.返回信息描述错误详情", response = ExceptionResponse.class) })
    @RequestMapping(value = "/users",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
     ResponseEntity<UsersResponse> getUsers();


    @ApiOperation(value = "用户信息修改", nickname = "updateUser", notes = "修改用户信息", response = SuccessResponse.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "通过返回值来标示执行结果　返回true表示执行成功", response = SuccessResponse.class),
        @ApiResponse(code = 200, message = "操作异常,执行失败.返回信息描述错误详情", response = ExceptionResponse.class) })
    @RequestMapping(value = "/user/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
     ResponseEntity<SuccessResponse> updateUser(@ApiParam(value = "用户名,要修改的数据的唯一标识符",required=true) @PathVariable("id") Integer id,@ApiParam(value = "新的用户信息" ,required=true )  @Valid @RequestBody User user) ;
    
    
    @ApiOperation(value = "新增一个用户", nickname = "addUser", notes = "新增一个用户", response = SuccessResponse.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "通过返回值来标示执行结果　返回true表示执行成功", response = SuccessResponse.class),
        @ApiResponse(code = 200, message = "操作异常,执行失败.返回信息描述错误详情", response = ExceptionResponse.class) })
    @RequestMapping(value = "/users",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
     ResponseEntity<SuccessResponse> addUser(@ApiParam(value = "新增用户信息" ,required=true )  @Valid @RequestBody User user) ;
}
